import React, { createContext, useState } from "react";
import { useContext } from "react";
import * as Models from "../models";

let nextKey = 0;

export const MessageContext = createContext<Models.Messages | undefined>(undefined);

export const MessageProvider: React.FC<React.PropsWithChildren<MessageProviderProps>> = ({ children }) => {

    const [messages, setMessages] = useState<Models.Message[]>([]);

    const sendMessage = (message: Models.Message) => {
        message.key ??= `autogenerated-message${nextKey++}`;
        setMessages([...messages.filter(m => m.key !== message.key), message]);
    };

    const clearMessage = (key: string) => {
        setMessages(messages.filter(m => m.key !== key));
    }

    return (
        <MessageContext.Provider value={{ messages, sendMessage, clearMessage }}>
            {children}
        </MessageContext.Provider>
    );
}

export const useMessages = () => useContext(MessageContext);

export interface MessageProviderProps {
}
